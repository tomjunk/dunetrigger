#include "services_refactored_pdune.fcl"
#include "protodune_tools_dune.fcl"
#include "tools_dune.fcl"

process_name: TriggerTPCInfo

services:
{
  TFileService: { fileName: "TriggerTPC_hist.root" }
  TimeTracker:       @local::dune_time_tracker
  MemoryTracker:     @local::dune_memory_tracker
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod
  #FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::protodunehd_reco_services
                        @table::protodunehd_services
  #  ChannelStatusService: @local::pdsp_channel_status
  IFDH: {}
}

source:
{
  module_type: RootInput
  maxEvents:  10        # Number of events to create
  saveMemoryObjectThreshold: 0
}

physics:
{

  analyzers:
 {
     offlineTriggerTPCInfoDisplay:
     {
         module_type: TriggerTPCInfoDisplay
         tp_tag: "tpmakerTPC"
         ta_tag: "tamakerTPC"
         tc_tag: "tcmakerTPC"
         verbosity: 1
     }

     onlineTriggerTPCInfoDisplay:
     {
         module_type: TriggerTPCInfoDisplay
         tp_tag: "trigrawdecoder:daq"
         ta_tag: "trigrawdecoder:daq"
         tc_tag: "trigrawdecoder:daq"
         verbosity: 1
     }
 }

 ana:       [ offlineTriggerTPCInfoDisplay, onlineTriggerTPCInfoDisplay ]

 stream1:   [ out1 ]

 end_paths: [ stream1, ana ]
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "TriggerHistogramsTPC_output.root"
   compressionLevel: 1
 }
}

